# This file was auto-generated by the Firebase CLI
# https://github.com/firebase/firebase-tools

name: Deploy to Firebase Hosting on merge
on:
  push:
    branches:
      - main
jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    env:
      FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
      FIREBASE_AUTH_DOMAIN: ${{ secrets.FIREBASE_AUTH_DOMAIN }}
      FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
      FIREBASE_STORAGE_BUCKET: ${{ secrets.FIREBASE_STORAGE_BUCKET }}
      FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}
      FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}
      FIREBASE_MEASUREMENT_ID: ${{ secrets.FIREBASE_MEASUREMENT_ID }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.32.0'
          channel: 'stable'
          cache: true  # Use the stable channel for the latest stable version

      - name: Clean dependencies
        run: flutter clean

      - name: Install dependencies
        run: flutter pub get


      - name: Generate .env file for Envied
        run: |
          echo "FIREBASE_API_KEY=$FIREBASE_API_KEY" > .env
          echo "FIREBASE_AUTH_DOMAIN=$FIREBASE_AUTH_DOMAIN" >> .env
          echo "FIREBASE_PROJECT_ID=$FIREBASE_PROJECT_ID" >> .env
          echo "FIREBASE_STORAGE_BUCKET=$FIREBASE_STORAGE_BUCKET" >> .env
          echo "FIREBASE_MESSAGING_SENDER_ID=$FIREBASE_MESSAGING_SENDER_ID" >> .env
          echo "FIREBASE_APP_ID=$FIREBASE_APP_ID" >> .env
          echo "FIREBASE_MEASUREMENT_ID=$FIREBASE_MEASUREMENT_ID" >> .env
          # Add more lines as needed for each variable

      - name: Create Environment Data File
        run: dart run build_runner build --delete-conflicting-outputs

      - name: Install dependencies
        run: npm ci

      - name: Build the project
        run: flutter build web

      #      - name: Deploy Web
      #        run: firebase deploy --only hosting

      - run: npm ci && npm run build

      #      - name: Set version
      #        run: echo "v1.0.0" > version.txt
      #
      #      - name: Create GitHub Release
      #        id: create_release
      #        uses: actions/create-release@v1
      #        env:
      #          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #        with:
      #          tag_name: v1.0.0
      #          release_name: "v1.0.0"
      #          draft: false
      #          prerelease: false

      - uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_PORTFOLIO_83984 }}
          channelId: live
          projectId: portfolio-83984
